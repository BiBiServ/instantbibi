<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
    
    Copyright 2011 BiBiServ Curator Team, http://bibiserv.cebitec.uni-bielefeld.de,
    All rights reserved.
    
    The contents of this file are subject to the terms of the Common
    Development and Distribution License("CDDL") (the "License"). You
    may not use this file except in compliance with the License. You can
    obtain a copy of the License at http://www.sun.com/cddl/cddl.html
    
    See the License for the specific language governing permissions and
    limitations under the License.  When distributing the software, include
    this License Header Notice in each file.  If applicable, add the following
    below the License Header, with the fields enclosed by brackets [] replaced
    by your own identifying information:
    
    "Portions Copyrighted 2011 BiBiServ Curator Team, http://bibiserv.cebitec.uni-bielefeld.de"
    
    Contributor(s): Jan Krueger
    
    Authors: Jan Krueger, jkrueger(at)cebitec.uni-bielefeld.de
             Armin Toepfer, atoepfer(at)techfak.uni-bielefeld.de (initial release  based on make)
     -->


<project name="instantbibi" basedir="." default="instant">
    
   <!--  <loadresource></loadresource> -->
    <!-- build.xml should replace Makefile 
    
         not finished yet ...
    -->
    
    <property name="bibiserv_url" value="http://bibiserv.cebitec.uni-bielefeld.de"/>
    <property name="glassfish_url" value="http://download.java.net/glassfish/3.1.1/release/glassfish-3.1.1.zip"/>
    <property name="base.dir" value="/tmp/${user.name}"/>
    <property name="spool.dir" value="${base.dir}/spool"/>
    <property name="exec.dir" value="${base.dir}/bin"/>
    <property name="portbase" value="18000"/>
    <property name="bp.port" value="18027"/>
    <property name="admin.port" value="18048"/>
    
    <!-- Script to calculate the java db port and set the variable ${db.port} from the given portbase -->
    <!-- <scriptdef name="setPorts" language="javascript">
        <attribute name="portbase"/>
        <![CDATA[
        project.setNewProperty("DBPORT", (parseInt(attributes.get("PORTBASE"))+27));
        project.setNewProperty("ADMINPORT", (parseInt(attributes.get("PORTBASE"))+48));
    ]]>
    </scriptdef> -->


    

    <target name="instant" depends=".get,.unzip,.create.config,.create.domain,start" description="create/configure GF, deploys bibimainapp using stable resources">
        <echo>ant instant finished</echo>
    </target>
    
    
    <target name="instant.dev" description="setup a complete BiBiServ2 environment using latest developer resources from mercurial repository!">
        <echo>Not Yet Implemented!</echo>
    </target>
    
  
    <target name="start" description="start glassfish/database and deploys bibimainapp">
        <ant antfile="appserver_config/build.xml" target="start" dir="appserver_config"/>
        <antcall target="deploy"/>
        <echo>Server started and BiBiMainApp deployed ...</echo>
    </target>
    
    <target name="deploy" description="deploys bibimainapp ">
        <exec executable="asadmin" dir="glassfish3/bin">
            <arg/>
        </exec>
    </target>
    
    <target name="stop" description="stops glassfish and database">
        <ant antfile="build.xml" target="stop"  dir="appserver_config"/>
    </target>
    
    <!-- clean up  including unzipped everything -->
    <target name="wipe.all" depends="stop">
        <delete>
            <f
        </delete>
        
    </target>
    
    <!-- ######################## create and configure new domain   ########################### -->
    
    <target name=".create.domain" depends=".create.config">
        
        <ant antfile="build.xml" target="configure" dir="appserver_config"/>
    </target>
    
    <target name=".create.config">     
        <echo>create configuration</echo>
        <propertyfile file="appserver_config/local.configuration">
            <entry key="catalina.home" value="${basedir}/glassfish3"/>
            <entry key="domain.dir" value="${base.dir}"/>
            <entry key="domain" value="bibidomain"/>
            <entry key="admin.user" value="admin"/>
            <entry key="spool.dir" value="${spool.dir}"/>
            <entry key="executable.dir" value="${exec.dir}"/>
            <entry key="server.portbase" value="${portbase}"/>
            <entry key="dp.port" value="${db.port}"/>
            <entry key="admin.port" value="${admin.port}"/>       
        </propertyfile>
        <propertyfile file="appserver_config/local.passwordfile">
            <entry key="AS_ADMIN_PASSWORD" value="admin"/>
            <entry key="AS_ADMIN_MASTERPASSWORD" value="changeit"/>
        </propertyfile>
    </target>
    
    <!-- ######################## unzip downloaded sources  ########################### -->
    
    <target name=".unzip" depends=".unzip.glassfish,.unzip.appserver.config">
        
    </target>
    
    <target name=".unzip.glassfish" depends=".get.glassfish">
        <unzip src=".cache/glassfish.zip" dest="."/>     
        <chmod perm="ugo+rx" file="glassfish3/bin/asadmin"/>
        <chmod perm="ugo+rx" file="glassfish3/javadb/bin/ij"/>
    </target>
    
    <target name=".unzip.appserver.config" depends=".get.appserver.config">
        <unzip src=".cache/appserver_config.zip" dest="."/>
    </target>
    
    
    
    <!-- ######################## targets to download sources from server ########################### -->
    
    <target name=".get" depends=".get.appserver.config,.get.base,.get.instantbibi.resources,.get.bibimainapp,.get.glassfish "/> <!-- -->
    
    <target name=".get.appserver.config" depends=".check.appserver.config" unless=".available.appserver.config">
        <echo> Download ${bibiserv_url}/resources/appserver_config.zip</echo>
        <mkdir dir=".cache"/>
        <get src="${bibiserv_url}/resources/appserver_config.zip" dest=".cache/appserver_config.zip" verbose="yes"/>
    </target>
    
    <target name=".check.appserver.config">
        <condition property=".available.appserver.config">
            <available file=".cache/appserver_config.zip"/>        
        </condition>    
    </target>
    
    <target name=".get.base" depends=".check.base" unless=".available.base">
        <echo> Download ${bibiserv_url}/resources/base.zip</echo>
        <mkdir dir=".cache"/>
        <get src="${bibiserv_url}/resources/base.zip" dest=".cache/base.zip" verbose="yes"/>
    </target>
    
    <target name=".check.base">
        <condition property=".available.base">
            <available file=".cache/base.zip"/>        
        </condition>    
    </target>
    
    <target name=".get.instantbibi.resources" depends=".check.instantbibi.resources" unless=".available.instantbibi.resources">
        <echo> Download ${bibiserv_url}/resources/instantbibi_resources.zip</echo>
        <mkdir dir=".cache"/>
        <get src="${bibiserv_url}/resources/instantbibi_resources.zip" dest=".cache/instantbibi_resources.zip" verbose="yes"/>
    </target>
    
    <target name=".check.instantbibi.resources">
        <condition property=".available.instantbibi.resources">
            <available file=".cache/instantbibi_resources.zip"/>        
        </condition>    
    </target>
    
    <target name=".get.bibimainapp" depends=".check.bibimainapp" unless=".available.bibimainapp">
        <echo> Download ${bibiserv_url}/resources/bibimainapp.war</echo>
        <mkdir dir=".cache"/>
        <get src="${bibiserv_url}/resources/bibimainapp.war" dest=".cache/bibimainapp.war" verbose="yes"/>
    </target>
    
    <target name=".check.bibimainapp">
        <condition property=".available.bibimainapp">
            <available file=".cache/bibimainapp.war"/>        
        </condition>    
    </target>
    
    <target name=".get.glassfish" depends=".check.glassfish" unless=".available.glassfish">
        <echo> Download ${glassfish_url}</echo>
        <mkdir dir=".cache"/>
        <get src="${glassfish_url}" dest=".cache/glassfish.zip" verbose="yes"/>
    </target>
    
    <target name=".check.glassfish">
        <condition property=".available.glassfish">
            <available file=".cache/glassfish.zip"/>        
        </condition>    
    </target>
       
</project>
